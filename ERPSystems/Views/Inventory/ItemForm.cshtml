@model ERPSystem.Models.InventoryModel

@{
    ViewBag.Title = "ItemForm";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<head>
    <link href="~/Style/accountablestyle.css" rel="stylesheet" />
</head>
<h2>ItemForm</h2>
<section class="home">
    @using (Html.BeginForm("ProcessCreate", "Inventory"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>InventoryModel</h4>
            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.prod_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.DropDownListFor(model => model.prod_Id, (SelectList)ViewBag.prod, "Select Product", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.prod_Id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.inv_QOH, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.inv_QOH, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                    @Html.ValidationMessageFor(model => model.inv_QOH, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProdUnit, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProdUnit, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProdUnit, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProdUnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProdUnitPrice, new { htmlAttributes = new { @class = "form-control", @min = "0", @type = "number" } })
                    @Html.ValidationMessageFor(model => model.ProdUnitPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    @{
        // Retrieve success or error messages from TempData
        var successMessage = TempData["Success"] as string;
        var errorMessage = TempData["Error"] as string;
    }
    @if (!string.IsNullOrEmpty(successMessage))
    {
        <div class="alert alert-success" role="alert">
            @successMessage
        </div>
    }
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @errorMessage
        </div>
    }
    <div class="right-content">
        @Html.ActionLink("Back to List", "Index")
    </div>
</section>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
