@model ERPSystem.Models.ItemRequestModel
@{
    ViewBag.Title = "AddRequisition";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<head>
    <link href="~/Style/style.css" rel="stylesheet" />
</head>
<div class="home">
    @using (Html.BeginForm("AddRequisitionItem", "RequestorPage", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()

        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Unit</th>
                    <th>Quantity</th>
                    <th id="qohColumn" style="display:none;">QOH</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="items-container">
                <tr class="item-row">
                    <td>
                        @Html.DropDownListFor(model => model.reqItems[0].ProdId, (SelectList)ViewBag.returnList, "Select Product", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.reqItems[0].ProdId, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.reqItems[0].Unit, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.reqItems[0].Unit, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.reqItems[0].Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.reqItems[0].Quantity, "", new { @class = "text-danger" })
                    </td>
                    <td id="qohCell" style="display:none">another field</td>
                    <td>
                        <button type="button" class="btn btn-danger" onclick="removeItemRow(this)">Remove</button>
                    </td>
                </tr>
            </tbody>
        </table>

        <button type="button" class="btn btn-success" onclick="addItemRow()">Add Item</button>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-primary" />
            </div>
        </div>
    }
    @Html.ActionLink("CHECK INVENTORY", "CheckInventory", "Inventory", null, new { @class = "button-link", id = "checkInventoryLink" })

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

@section scripts {
    <script>
        var index = 1; // Initial index for additional rows
        function addItemRow() {
            var newRow = $("#items-container tr.item-row:first").clone();
            newRow.find("select, input").each(function () {
                var nameAttr = $(this).attr("name").replace("[0]", "[" + index + "]");
                $(this).attr("name", nameAttr);
                $(this).val(""); // Clear the values in the new row
            });
            newRow.find("span.field-validation-valid").empty(); // Clear validation messages
            index++;
            $("#items-container").append(newRow);
        }

        function removeItemRow(button) {
            $(button).closest("tr").remove();
        }

        //CHeck inventory
        $(document).ready(function () {
            $("#checkInventoryButton").click(function () {
                $("#qohColumnr, #qohCell").toggle();
            });
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
