@model ERPSystems.Models.ItemRequestModel

@{
    ViewBag.Title = "AddRequisition";
    Layout = "~/Views/Shared/_RequestorPage.cshtml";
}


<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.1/css/all.min.css" integrity="sha256-2XFplPlrFClt0bIdPgpz8H7ojnk10H69xRqd9+uTShA=" crossorigin="anonymous" />
    <link href="~/Style/request.css" rel="stylesheet" />
    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/jquery-ui-1.13.2.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
</head>
<section class="home">
    <div class="main--content">
        <div class="tabular--wrapper">
            <h3 class="table-title">
                Add Request
            </h3>
            @using (Html.BeginForm("AddRequisitionItem", "RequestorPage", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()

                @Html.HiddenFor(model => model.reqItems[0].RequestId)

                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Quantity</th>
                            <th>Unit</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="items-container">
                        <tr class="item-row">
                            <td>
                                @Html.DropDownListFor(model => model.reqItems[0].ProdId, (SelectList)ViewBag.returnList, "Select Product", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.reqItems[0].ProdId, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.EditorFor(model => model.reqItems[0].Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.reqItems[0].Quantity, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.EditorFor(model => model.reqItems[0].Unit, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.reqItems[0].Unit, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                <button type="button" class="btn btn-danger" onclick="removeItemRow(this)">Remove</button>
                            </td>
                        </tr>
                    </tbody>
                </table>

                <br />

                <button type="button" class="btn btn-success" onclick="addItemRow()">Add Item</button>

                <br />
                <br />

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-primary" />
                    </div>
                </div>}
            <br />
            @Html.ActionLink("Get Back", "RequestorRequisition")
        </div>
    </div>
</section>
            
@section scripts {
    <script>
        var index = 1; // Initial index for additional rows
        function addItemRow() {
            var newRow = $("#items-container tr.item-row:first").clone();
            newRow.find("select, input").each(function () {
                var nameAttr = $(this).attr("name").replace("[0]", "[" + index + "]");
                $(this).attr("name", nameAttr);
                $(this).val(""); // Clear the values in the new row
            });
            newRow.find("span.field-validation-valid").empty(); // Clear validation messages
            index++;
            $("#items-container").append(newRow);
        }

        function removeItemRow(button) {
            var itemRows = $("#items-container tr.item-row");
            if (itemRows.length > 1) { // Ensure at least two item rows exist
                $(button).closest("tr").remove();
            } else {
                // Optionally display a message indicating there must be at least one item
                alert("You must have at least one item.");
            }
        }
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
