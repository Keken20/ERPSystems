@model IPagedList<ERPSystem.Models.ViewModel.ProductViewModel>

@using PagedList;
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}


<head>
    <link href="~/Style/accountablestyle.css" rel="stylesheet" />
</head>
<div class="home">
    <h2 style="float:inherit; margin-left:20%">Index</h2>
    <p style="float:inherit; margin-left:20%">
        @Html.ActionLink("Create New", "productCreate")
    </p>
    <div class="right-content">
        @using (Html.BeginForm("Search", "Product"))
        {
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="col-md-10">
                        <label for="searchPhrase">Search ID</label>
                        <input type="text" name="searchPhrase" id="searchPhrase" class="form-control" />
                        <input type="submit" value="Search" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
        @using (Html.BeginForm("Index", "Product"))
        {
            <input type="submit" value="Show All" class="btn btn-default" />
        }
    </div>
    <div class="table-container">
        <div>
            <table class="tbl">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.First().prod_Id)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().prod_Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().prod_Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().CategoryName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().SuppName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().inDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().isActive)
                        </th>
                        <th colspan="2">
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.prod_Id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.prod_Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.prod_Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CategoryName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SuppName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.inDate)
                            </td>
                            <td>
                                @(item.isActive == 1 ? "Active" : "Inactive")
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.prod_Id }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.prod_Id })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    @Html.PagedListPager(Model, pages => Url.Action("Index", "Product", new { pages, search = Request.QueryString["Search"] }))
</div>